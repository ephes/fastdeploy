- hosts: staging
  vars:
    username: deploy
    home_path: "/home/{{ username }}"
    site_path: "{{ home_path }}/site"
    services_path: "{{ site_path }}/services"
    global_python: python3.12
    uv_path: "/usr/local/bin/uv"
    venv_bin: "{{ site_path }}/venv/bin"
    ansible_venv_bin: "{{ home_path }}/ansible_venv/bin"
    ansible_plugin_dir: "/root/.ansible/plugins/callback"
    python: "{{ venv_bin }}/python"
    ansible_python: "{{ ansible_venv_bin }}/python"
    pip_sync: "{{ venv_bin }}/pip-sync"
    default_path: "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
    initial_user_name: jochen

  tasks:
    - name: "Include secret vars"
      include_vars: secrets.yml

    - name: Download NodeSource setup script
      get_url:
        url: https://deb.nodesource.com/setup_22.x
        dest: /tmp/nodesource_setup.sh
        mode: '0755'
      environment:
        PATH: "{{ default_path }}"

    - name: Run NodeSource setup script
      shell: /tmp/nodesource_setup.sh
      environment:
        PATH: "{{ default_path }}"

    - name: Install required build packages
      apt:
        name: ["git", "nodejs"]
        state: latest
        update_cache: yes
      environment:
        PATH: "{{ default_path }}"
        NODE_MAJOR: 22

    - name: Add a unix user with a bash shell
      user:
        name: "{{ username }}"
        shell: /usr/bin/fish
      environment:
        PATH: "{{ default_path }}"

    - name: Git checkout repository
      git:
        repo: "https://github.com/ephes/fastdeploy"
        dest: "{{ site_path }}"
        force: yes
      become: true
      become_user: "{{ username }}"
      environment:
        PATH: "{{ default_path }}"

    - name: Create .env file
      template:
        src: env.template.j2
        dest: "{{ site_path }}/.env"
        mode: '0600'
      become: true
      become_user: "{{ username }}"
      environment:
        PATH: "{{ default_path }}"

    - name: Create directory for fish config
      file:
        path: "{{ home_path }}/.config/fish"
        state: directory
        owner: "{{ username }}"
      become_user: "{{ username }}"
      environment:
        PATH: "{{ default_path }}"

    - name: Create fish config
      template:
        src: user_config.fish.template.j2
        dest: "{{ home_path }}/.config/fish/config.fish"
        mode: "0644"
        owner: "{{ username }}"
      become_user: "{{ username }}"
      environment:
        PATH: "{{ default_path }}"

    - name: Create .vault_password file
      template:
        src: vault_password.template.j2
        dest: "{{ site_path }}/ansible/.vault_password"
        mode: '0600'
      become: true
      become_user: "{{ username }}"
      environment:
        PATH: "{{ default_path }}"

    - name: Create a new postgres database
      community.general.postgresql_db:
        name: "{{ postgres_database }}"
        state: present
      become: true
      become_user: postgres

    - name: Create a new postgres user
      community.general.postgresql_user:
        db: "{{ postgres_database }}"
        name: "{{ postgres_user }}"
        password: "{{ postgres_password }}"
        state: present
      become: true
      become_user: postgres

    - name: Install fastdeploy frontend vue app dependencies
      shell: npm install
      args:
        chdir: "{{ site_path }}/frontend"
      become: true
      become_user: "{{ username }}"
      environment:
        PATH: "{{ default_path }}"

    - name: Build fastdeploy frontend vue app
      shell: npm run build
      args:
        chdir: "{{ site_path }}/frontend"
      become: true
      become_user: "{{ username }}"
      environment:
        PATH: "{{ default_path }}"

    - name: Create virtualenv for python
      shell: "{{uv_path}} venv -p {{ global_python }} {{ site_path }}/.venv"
      become: true
      become_user: "{{ username }}"

    - name: Link .venv to venv
      shell: "ln -s .venv venv"
      args:
        chdir: "{{ site_path }}"
      become: true
      become_user: "{{ username }}"

    - name: Create virtualenv for ansible
      shell: "{{uv_path}} venv -p {{ global_python }} {{ site_path }}/ansible_venv"
      become: true
      become_user: "{{ username }}"

    - name: Install ansible
      shell: "{{ uv_path }} pip install ansible"
      become: true
      become_user: "{{ username }}"
      environment:
        PATH: "{{ default_path }}"
        VIRTUAL_ENV: "{{ site_path }}/ansible_venv"

    - name: Install psycopg2 for ansible
      shell: "{{ uv_path }} pip install psycopg2-binary"
      become: true
      become_user: "{{ username }}"
      environment:
        PATH: "{{ default_path }}"
        VIRTUAL_ENV: "{{ site_path }}/ansible_venv"

    - name: Create directory for ansible callback plugins
      file:
        path: "{{ ansible_plugin_dir }}"
        state: directory
        owner: "{{ username }}"

    - name: Copy json stdout callback into default plugin directory
      ansible.builtin.copy:
        src: callback_plugins/json_cb.py
        dest: "{{ ansible_plugin_dir }}/json_cb.py"
        owner: "{{ username }}"
        mode: "0644"

    - name: Create sudoers file for deploy scripts
      template:
        src: fastdeploy_sudoers.template.j2
        dest: /etc/sudoers.d/fastdeploy_as_root
        mode: '0440'
      environment:
        PATH: "{{ default_path }}"

    - name: Create directory for ansible inventory
      file:
        path: "{{ site_path }}/ansible/inventory/"
        state: directory
        owner: "{{ username }}"

    - name: Create local inventory
      template:
        src: hosts.yml.template.j2
        dest: "{{ site_path }}/ansible/inventory/hosts.yml"
        mode: '0600'
      become: true
      become_user: "{{ username }}"
      environment:
        PATH: "{{ default_path }}"

    - name: Create directory for server start script
      file:
        path: "{{ site_path }}/bin"
        state: directory
        owner: "{{ username }}"

    - name: Create uvicorn start script
      template:
        src: deploy.py.template.j2
        dest: "{{ site_path }}/bin/deploy.py"  # don't use uvicorn.py -> import error
        mode: '0755'
      become: true
      become_user: "{{ username }}"
      environment:
        PATH: "{{ default_path }}"

    - name: Create directory for fastdeploy service
      file:
        path: "{{ services_path }}/fastdeploy"
        state: directory
        owner: "{{ username }}"

    - name: Create task deploy file for fastdeploy
      template:
        src: fastdeploy_staging_deploy.sh.template.j2
        dest: "{{ services_path }}/fastdeploy/deploy.sh"
        mode: '0500'
      become: true
      become_user: "{{ username }}"
      environment:
        PATH: "{{ default_path }}"

    - name: Create service config for fastdeploy
      template:
        src: fastdeploy_staging_config.json.template.j2
        dest: "{{ services_path }}/fastdeploy/config.json"
        mode: '0400'
      become: true
      become_user: "{{ username }}"
      environment:
        PATH: "{{ default_path }}"

    - name: Install app production requirements
      shell: "{{ uv_path }} sync --no-dev"
      args:
        chdir: "{{ site_path }}"
      become: true
      become_user: "{{ username }}"
      environment:
        PATH: "{{ default_path }}"

    - name: Create initial user
      shell: "{{ python }} commands.py createuser"
      args:
        chdir: "{{ site_path }}"
      become: true
      become_user: "{{ username }}"
      environment:
        INITIAL_PASSWORD_HASH: "{{ initial_user_password_hash }}"
        INITIAL_USER_NAME: "{{ initial_user_name }}"
        PATH: "{{ default_path }}"

    - name: Sync services from filesystem with database
      shell: "{{ python }} commands.py syncservices"
      args:
        chdir: "{{ site_path }}"
      become: true
      become_user: "{{ username }}"
      environment:
        PATH: "{{ default_path }}"

    - name: Create a symbolic link for uvicorn systemd service
      file:
        src: "{{ site_path }}/ansible/deploy.service"
        dest: /etc/systemd/system/deploy.service
        state: link
      environment:
        PATH: "{{ default_path }}"

    - name: Make sure deploy uvicorn service is restarted
      systemd:
        state: restarted
        name: "{{ username }}"
      environment:
        PATH: "{{ default_path }}"

    - name: Create a symbolic link for traefik loadbalancer
      file:
        src: "{{ site_path }}/ansible/deploy.traefik.yml"
        dest: /etc/traefik/dynamic/deploy.traefik.yml
        state: link
      environment:
        PATH: "{{ default_path }}"
